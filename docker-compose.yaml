services:
  node:
    build: 
      context: ./server
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    volumes:
      - ./server:/app
      - /app/node_modules
    restart: always
    depends_on:
      db:
        condition: service_healthy
    command: npm start
    # entrypoint: [ "node", "import.js" ]
  react:
    build: 
      context: ./client
      dockerfile: Dockerfile
    volumes:
      - ./client:/app
      - /app/node_modules
    ports:
     - 3001:3001
    stdin_open: true
    restart: always
    command: npm start
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres
    restart: always
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata/
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      POSTGRES_DB: dsolgames
    ports:
     - 5432:5432
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "dsolgames", "-U", "postgres" ]
      interval: 7s
      timeout: 5s
      retries: 5
    volumes:
     - ./server/database.sql:/docker-entrypoint-initdb.d/database.sql
     - ./server/pgdata:/var/lib/postgresql/pgdata
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: user-name@domain-name.com
      PGADMIN_DEFAULT_PASSWORD: strong-password
    volumes:
      - pgadmin-data:/var/lib/pgadmin
volumes:
  pgadmin-data: